<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>しののブログ</title>
    <link>https://shino16.github.io/blog/</link>
    <description>Recent content on しののブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>&amp;copy; shino16 &lt;br /&gt; コード片はCC0で配布します。ご自由にお使いください。</copyright>
    <lastBuildDate>Fri, 30 Oct 2020 14:25:20 +0900</lastBuildDate><atom:link href="https://shino16.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vanlint Wilson 19</title>
      <link>https://shino16.github.io/blog/posts/math/vanlint-wilson-19/</link>
      <pubDate>Fri, 30 Oct 2020 14:25:20 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/posts/math/vanlint-wilson-19/</guid>
      <description>例19.10 定理19.11 を使ってみましょう
 オーダー $n = 6$ の射影平面（$\lambda=1$ の symmetric design）  ※ $n=2,3,4,5,7,8,9$ の場合は $F_n$ を使って $PG_2(n)$ が構成できる</description>
    </item>
    
    <item>
      <title>データ構造に乗せる代数的構造の持ち方</title>
      <link>https://shino16.github.io/blog/posts/algo/%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0%E3%81%AB%E4%B9%97%E3%81%9B%E3%82%8B%E4%BB%A3%E6%95%B0%E7%9A%84%E6%A7%8B%E9%80%A0%E3%81%AE%E6%8C%81%E3%81%A1%E6%96%B9/</link>
      <pubDate>Mon, 19 Oct 2020 02:00:00 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/posts/algo/%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0%E3%81%AB%E4%B9%97%E3%81%9B%E3%82%8B%E4%BB%A3%E6%95%B0%E7%9A%84%E6%A7%8B%E9%80%A0%E3%81%AE%E6%8C%81%E3%81%A1%E6%96%B9/</guid>
      <description>代数的構造を乗せるデータ構造の設計について - noshi91のメモ
上の記事で D として書かれているものを、利用者側が構造体を書かなくてもよいような方法で実装してみました。
だいたい次のような見た目となります。詳細は src/alg.rs
※今後もころころ宗旨替えすると思われます
trait Monoid { type Item: Clone; fn unit(&amp;amp;self) -&amp;gt; Self::Item; fn op(&amp;amp;self, x: Self::Item, y: Self::Item) -&amp;gt; Self::Item; } struct MonoidImpl&amp;lt;Unit, Op&amp;gt;(Unit, Op); impl&amp;lt;T: Clone, Unit, Op&amp;gt; Monoid for MonoidImpl&amp;lt;Unit, Op&amp;gt; where Unit: Fn() -&amp;gt; T, Op: Fn(&amp;amp;T, &amp;amp;T) -&amp;gt; T, { type Item = T; fn unit(&amp;amp;self) -&amp;gt; T { (self.</description>
    </item>
    
    <item>
      <title>IOライブラリの設計</title>
      <link>https://shino16.github.io/blog/posts/algo/io%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%AE%E8%A8%AD%E8%A8%88/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/posts/algo/io%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%AE%E8%A8%AD%E8%A8%88/</guid>
      <description>競プロ用の入出力ライブラリ（Rust）を作る
要件 長年抱えてる葛藤が、貼る用のライブラリをゴテゴテに作りこむか、簡潔にとどめたほうが綺麗かという
&amp;mdash; しの (@shino_skycrew) October 5, 2020 妥協ラインとして、ライブラリは多少長くしてもよい代わりにすべて main 等の下に追いやります。
 マクロは使わずに、proconio の input!</description>
    </item>
    
    <item>
      <title>オートマトン（DFA）での桁DPを理解する</title>
      <link>https://shino16.github.io/blog/posts/algo/%E3%82%AA%E3%83%BC%E3%83%88%E3%83%9E%E3%83%88%E3%83%B3/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/posts/algo/%E3%82%AA%E3%83%BC%E3%83%88%E3%83%9E%E3%83%88%E3%83%B3/</guid>
      <description>まとめ
  文字列の識別を DFA として表現することで、複数の条件や状態遷移を分けて記述し、これらの組み合わせで桁DPを構成するフレームワークが出来ました！
  いかがでしたか？
 参考文献は以下の通りです。ありがとうございました。
水谷 正大, オートマトンと言語理論</description>
    </item>
    
    <item>
      <title>期待値とダブルカウント・鳩ノ巣原理の関係</title>
      <link>https://shino16.github.io/blog/posts/math/%E6%9C%9F%E5%BE%85%E5%80%A4%E3%81%A8%E3%83%80%E3%83%96%E3%83%AB%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E9%B3%A9%E3%83%8E%E5%B7%A3%E5%8E%9F%E7%90%86%E3%81%AE%E9%96%A2%E4%BF%82/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shino16.github.io/blog/posts/math/%E6%9C%9F%E5%BE%85%E5%80%A4%E3%81%A8%E3%83%80%E3%83%96%E3%83%AB%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E9%B3%A9%E3%83%8E%E5%B7%A3%E5%8E%9F%E7%90%86%E3%81%AE%E9%96%A2%E4%BF%82/</guid>
      <description>深夜の算数クイズ 4 pic.twitter.com/nXIjPTlmoo
&amp;mdash; きり (@kiri8128) September 28, 2020 この問題をきっかけに期待値を利用した証明法についていくつか復習し、役割や鳩ノ巣原理との関係などを考えました。参考文献・問題の出典は以下。
Evan Chen, Expected Uses of Probability</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://shino16.github.io/blog/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shino16.github.io/blog/about/</guid>
      <description>本や記事、Twitterで見聞きしたことや調べたこと等を書き溜めていきます。
このサイトはHugoで構築されています。テーマはPicklesベース。だいぶ楽でしたし書きやすいです。</description>
    </item>
    
  </channel>
</rss>
